// <auto-generated />
using System;
using Jovian_Project_Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Jovian_Project_Backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250523092951_1 Actor and InfoActor table name fixed 2 Info actor column name fixed")]
    partial class _1ActorandInfoActortablenamefixed2Infoactorcolumnnamefixed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Jovian_Project_Backend.Models.Actor", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ID");

                    b.ToTable("actor");
                });

            modelBuilder.Entity("Jovian_Project_Backend.Models.Info", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsUpdated")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("RepoName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("ScanDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ID");

                    b.ToTable("Info");
                });

            modelBuilder.Entity("Jovian_Project_Backend.Models.InfoActor", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ActorID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<Guid>("InfoID")
                        .HasColumnType("char(36)");

                    b.Property<bool?>("IsUpdated")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ID");

                    b.HasIndex("ActorID");

                    b.HasIndex("InfoID");

                    b.ToTable("info_actor");
                });

            modelBuilder.Entity("Jovian_Project_Backend.Models.Threat", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Categories")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("InfoID")
                        .HasColumnType("char(36)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsUpdated")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Justification")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Remediation")
                        .HasColumnType("longtext");

                    b.Property<string>("Risk")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("ScanDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("ScanID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ThreatDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ThreatDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("ThreatTitle")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ID");

                    b.HasIndex("InfoID");

                    b.ToTable("Threat");
                });

            modelBuilder.Entity("Jovian_Project_Backend.Models.ThreatDiagram", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("FlowDiagram")
                        .HasColumnType("longtext");

                    b.Property<Guid>("InfoID")
                        .HasColumnType("char(36)");

                    b.Property<string>("SequenceDiagram")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("InfoID");

                    b.ToTable("ThreatDiagram");
                });

            modelBuilder.Entity("Jovian_Project_Backend.Models.InfoActor", b =>
                {
                    b.HasOne("Jovian_Project_Backend.Models.Actor", "Actor")
                        .WithMany("InfoActors")
                        .HasForeignKey("ActorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jovian_Project_Backend.Models.Info", "Info")
                        .WithMany("InfoActors")
                        .HasForeignKey("InfoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Info");
                });

            modelBuilder.Entity("Jovian_Project_Backend.Models.Threat", b =>
                {
                    b.HasOne("Jovian_Project_Backend.Models.Info", "Info")
                        .WithMany("Threats")
                        .HasForeignKey("InfoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Info");
                });

            modelBuilder.Entity("Jovian_Project_Backend.Models.ThreatDiagram", b =>
                {
                    b.HasOne("Jovian_Project_Backend.Models.Info", "Info")
                        .WithMany("ThreatDiagrams")
                        .HasForeignKey("InfoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Info");
                });

            modelBuilder.Entity("Jovian_Project_Backend.Models.Actor", b =>
                {
                    b.Navigation("InfoActors");
                });

            modelBuilder.Entity("Jovian_Project_Backend.Models.Info", b =>
                {
                    b.Navigation("InfoActors");

                    b.Navigation("ThreatDiagrams");

                    b.Navigation("Threats");
                });
#pragma warning restore 612, 618
        }
    }
}
